slife:
  rate: 200 # rate of asynchronous actions
  synthetic_pcl: false # pcl from depth camera ? false : true;
  ground_truth_queue_length: 40
  outputs: [relative_ground_truth, final_error]       # options: {history, error_history, final_error, relative_ground_truth}

  topics:
    pointcloud: /camera/depth/pointcloud
    ground_truth: /vicon/depth_camera/depth_camera
    debug_grid: /slife/debug/grid
    output_prefix: /slife/debug
    estimate: /slife/estimate
    command: /slife/cmd

  landscape:
    measure_radius: 0.7
    smooth_radius: 0.001
    precision: 10           # number of particles in the montecarlo estimate
    decimation: 10           # pointcloud elements decimation factor
    maximum_distance: 200   # remove points from pcl farther than maximum_distance 
    batch_size: 20         # number of points randomly draw from pcl used for landscape generation
    stochastic: true

  target_optimization_group: pose # options: {position, quaternion_r4, quaternion, pose_r4, pose, dual_quaternion [not implemented yet]}, warning: need to recompile with `using TargetGroup = <desired target group>`, in slife_handler.h
  optimizer:
    step_sizes: [0.008, 0.008] # pose [0.015, 0.015]
    norm_weights: [1, 1]
    threshold: 0.000
    max_iterations: 30
    initialization_type: identity # options: {identity, last, external [not implemented]}
    record_history: true          # time consuming, use only for debug
    disable: false                # do not perform optimization, only collect data and test
    cost:
      batch_size: 20 
      stochastic: true
      reshuffle_batch_indexes: false

  debug:
    test_grid:
      min: -0.2
      max: 0.2
      step: 0.01
    z_test_value: 0.
    test_type: none # options: {none, landscape_value, landscape_gradient, cost_value, cost_gradient}